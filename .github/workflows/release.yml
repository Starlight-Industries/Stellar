name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
  push:
    tags:
      - "v*.*.*" # Matches semver-like tags (e.g., v0.1.0)

jobs:
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            os_name: linux
            architecture: x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            os_name: macos
            architecture: x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            os_name: windows
            architecture: x86_64
            file_extension: .exe

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }}
    env:
      binary_name: stellar${{ matrix.file_extension }}

    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Install host target
        run: rustup target add ${{ matrix.target }}

      - name: Install musl-tools
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        run: sudo apt-get install -y musl-tools

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare Artifact Folder
        run: mkdir -p artifacts

      - name: Copy Artifact
        run: cp target/${{ matrix.target }}/release/${{ env.binary_name }} artifacts/stellar-${{ matrix.os_name }}-${{ matrix.architecture }}${{ matrix.file_extension }}

      - name: Create Tar Archive
        run: tar -czf stellar-${{ matrix.os_name }}-${{ matrix.architecture }}.tgz -C artifacts .

      - name: Store Archive
        uses: actions/upload-artifact@v4
        with:
          name: stellar-${{ matrix.os_name }}-${{ matrix.architecture }}
          path: stellar-${{ matrix.os_name }}-${{ matrix.architecture }}.tgz

  create-release:
    needs: [build-artifacts]
    runs-on: ubuntu-latest
    name: Create Release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            stellar-linux-x86_64.tgz,
            stellar-macos-x86_64.tgz,
            stellar-windows-x86_64.tgz
          tag: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
